// Grid
// ----

* {
	@include box-sizing(border-box);
}

.container {
	@include clearfix();
	width: $page-width + ($column-gutter * 2);
	padding: 0 $column-gutter;
	margin: 0 auto;
	
	@media screen and (max-width: $responsive-breakpoint) {
		padding: 0 $mobile-padding;
	}
}

.responsive {
	.container {
		width: auto;
		max-width: $page-width + ($column-gutter * 2);
	}

	@media screen and (max-width: $responsive-breakpoint) {
		[class*="span"] {
			float: none;
			width: 100%;
			padding-left: 0;
			padding-right: 0;
		}
	}
}

.row {
	@include clearfix();
	margin-left: -($column-gutter / 2);
	margin-right: -($column-gutter / 2);

	@media screen and (max-width: $responsive-breakpoint) {
		margin-left: 0;
		margin-right: 0;
	}
}

.field-row {
	@include clearfix();
	margin-left: - ($form-input-gutter / 2);
	margin-right: - ($form-input-gutter / 2);

	@media screen and (max-width: $responsive-breakpoint) {
		margin-left: 0;
		margin-right: 0;
	}
}

[class*="span"] {
	float: left;
	min-height: 1px;
	padding: 0 $column-gutter / 2;
}

.field-row {
	[class*="span"] {
		float: left;
		min-height: 1px;
		padding: 0 $form-input-gutter / 2;

		@media screen and (max-width: $responsive-breakpoint) {
			padding-left: 0;
			padding-right: 0;
		}				
	}	
}

@for $i from 1 through $column-count {
  .span#{$i} { width: ($i / $column-count) * 100% ; }
}

// Vertical Spacing
// ----------------

.region {
	padding: ($base-line-height * 2) 0 $base-line-height 0;
	
	&.bottom-rule {
		border-bottom: 1px solid $border-color;
	}
}

.subregion {
	margin-bottom: $base-line-height * 2;
}

.module {
	display: block;
	margin-bottom: $base-line-height;
	
	> *:last-child {
		margin-bottom: 0;
	}
}

.block {
	display: block;
	margin-bottom: $base-font-size;
}

.box {
	@include border-radius($small-border-radius);
	padding: $column-gutter;
	background: #fff;
}